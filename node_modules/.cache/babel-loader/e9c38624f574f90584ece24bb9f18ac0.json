{"ast":null,"code":"import _regeneratorRuntime from\"/home/yuri/Freelance/Clients/Cheil/SEACE_Installer_Locator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/yuri/Freelance/Clients/Cheil/SEACE_Installer_Locator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/yuri/Freelance/Clients/Cheil/SEACE_Installer_Locator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./MapScreen.css';import{Filter}from'./components/MapFilter';import{MapLegend}from'./components/MapLegend';import{MapRegionIndicator}from'./components/MapRegionIndicator';var _require=require('google-spreadsheet'),GoogleSpreadsheet=_require.GoogleSpreadsheet;var doc=new GoogleSpreadsheet('1QtCGUCN-_xZPLYExN3btHeXphRi4VI-uGABA87cHj-M');var REGION_TO_SHEET_MAP={'uk':9};function MapScreen(){var _useState=useState('uk'),_useState2=_slicedToArray(_useState,2),region=_useState2[0],setRegion=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),companies=_useState4[0],setCompanies=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState({lat:50.8742724,lon:0.6619475}),_useState8=_slicedToArray(_useState7,2),searchLocation=_useState8[0],setSearchLocation=_useState8[1];var fetchGoogleSheet=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return doc.useServiceAccountAuth(require('./SEACE Installer Locator-5a80e6b026be.json'));case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchGoogleSheet(){return _ref.apply(this,arguments);};}();// const onSearch = async (query: string) => {\n//   const point = {lat: 51.5287714, lon: -0.2420237}\n//   // const point = GMaps.getLocation(query)\n// }\nvar fetchCompaniesForRegion=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(region){var sheet,rows;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;setLoading(true);_context2.next=4;return doc.loadInfo();case 4:console.log(doc.title);sheet=doc.sheetsByIndex[REGION_TO_SHEET_MAP['uk']];_context2.next=8;return sheet.getRows({limit:25});case 8:rows=_context2.sent;setCompanies(rows);console.log(rows);setLoading(false);_context2.next=18;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](0);setLoading(false);console.error(_context2.t0);case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[0,14]]);}));return function fetchCompaniesForRegion(_x){return _ref2.apply(this,arguments);};}();// Only once\nuseEffect(function(){fetchGoogleSheet();});// Every region change\nuseEffect(function(){fetchCompaniesForRegion(region);},[region]);return/*#__PURE__*/React.createElement(\"div\",{className:\"map-screen\"},/*#__PURE__*/React.createElement(Filter,{onSubmit:function onSubmit(){},loading:loading,companies:companies,searchLocation:searchLocation}),/*#__PURE__*/React.createElement(MapLegend,{isOpened:true}),/*#__PURE__*/React.createElement(MapRegionIndicator,{region:region}));}export default MapScreen;","map":{"version":3,"sources":["/home/yuri/Freelance/Clients/Cheil/SEACE_Installer_Locator/src/MapScreen.tsx"],"names":["React","useState","useEffect","Filter","MapLegend","MapRegionIndicator","require","GoogleSpreadsheet","doc","REGION_TO_SHEET_MAP","MapScreen","region","setRegion","companies","setCompanies","loading","setLoading","lat","lon","searchLocation","setSearchLocation","fetchGoogleSheet","useServiceAccountAuth","fetchCompaniesForRegion","loadInfo","console","log","title","sheet","sheetsByIndex","getRows","limit","rows","error"],"mappings":"ghBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,iBAAP,CACA,OAASC,MAAT,KAAuB,wBAAvB,CACA,OAASC,SAAT,KAA0B,wBAA1B,CACA,OAASC,kBAAT,KAAmC,iCAAnC,C,aAG8BC,OAAO,CAAC,oBAAD,C,CAA7BC,iB,UAAAA,iB,CAER,GAAMC,CAAAA,GAAG,CAAG,GAAID,CAAAA,iBAAJ,CAAsB,8CAAtB,CAAZ,CAEA,GAAME,CAAAA,mBAAmB,CAAG,CAC1B,KAAM,CADoB,CAA5B,CAIA,QAASC,CAAAA,SAAT,EAAqB,eACST,QAAQ,CAAS,IAAT,CADjB,wCACZU,MADY,eACJC,SADI,8BAEeX,QAAQ,CAA8B,IAA9B,CAFvB,yCAEZY,SAFY,eAEDC,YAFC,8BAGWb,QAAQ,CAAU,KAAV,CAHnB,yCAGZc,OAHY,eAGHC,UAHG,8BAIyBf,QAAQ,CAAoC,CAACgB,GAAG,CAAE,UAAN,CAAkBC,GAAG,CAAE,SAAvB,CAApC,CAJjC,yCAIZC,cAJY,eAIIC,iBAJJ,eAMnB,GAAMC,CAAAA,gBAAgB,0FAAG,yJACjBb,CAAAA,GAAG,CAACc,qBAAJ,CAA0BhB,OAAO,CAAC,6CAAD,CAAjC,CADiB,uDAAH,kBAAhBe,CAAAA,gBAAgB,0CAAtB,CAIA;AACA;AACA;AACA;AAEA,GAAME,CAAAA,uBAAuB,2FAAG,kBAAOZ,MAAP,sJAE5BK,UAAU,CAAC,IAAD,CAAV,CAF4B,uBAGtBR,CAAAA,GAAG,CAACgB,QAAJ,EAHsB,QAI5BC,OAAO,CAACC,GAAR,CAAYlB,GAAG,CAACmB,KAAhB,EACMC,KALsB,CAKdpB,GAAG,CAACqB,aAAJ,CAAkBpB,mBAAmB,CAAC,IAAD,CAArC,CALc,wBAMTmB,CAAAA,KAAK,CAACE,OAAN,CAAc,CAAEC,KAAK,CAAE,EAAT,CAAd,CANS,QAMtBC,IANsB,gBAO5BlB,YAAY,CAACkB,IAAD,CAAZ,CACAP,OAAO,CAACC,GAAR,CAAYM,IAAZ,EAEAhB,UAAU,CAAC,KAAD,CAAV,CAV4B,qFAY5BA,UAAU,CAAC,KAAD,CAAV,CACAS,OAAO,CAACQ,KAAR,eAb4B,uEAAH,kBAAvBV,CAAAA,uBAAuB,6CAA7B,CAiBA;AACArB,SAAS,CAAC,UAAM,CAACmB,gBAAgB,GAAG,CAA3B,CAAT,CAEA;AACAnB,SAAS,CAAC,UAAM,CACdqB,uBAAuB,CAACZ,MAAD,CAAvB,CACD,CAFQ,CAEN,CAACA,MAAD,CAFM,CAAT,CAIA,mBACE,2BAAK,SAAS,CAAC,YAAf,eAQE,oBAAC,MAAD,EAAQ,QAAQ,CAAE,mBAAM,CAAE,CAA1B,CAA4B,OAAO,CAAEI,OAArC,CAA8C,SAAS,CAAEF,SAAzD,CAAoE,cAAc,CAAEM,cAApF,EARF,cASE,oBAAC,SAAD,EAAW,QAAQ,CAAE,IAArB,EATF,cAUE,oBAAC,kBAAD,EAAoB,MAAM,CAAER,MAA5B,EAVF,CADF,CAcD,CAED,cAAeD,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MapScreen.css';\nimport { Filter } from './components/MapFilter'\nimport { MapLegend } from './components/MapLegend'\nimport { MapRegionIndicator } from './components/MapRegionIndicator';\nimport { CompanyLayout } from './interfaces'\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n \nconst doc = new GoogleSpreadsheet('1QtCGUCN-_xZPLYExN3btHeXphRi4VI-uGABA87cHj-M');\n\nconst REGION_TO_SHEET_MAP = {\n  'uk': 9\n}\n\nfunction MapScreen() {\n  const [region, setRegion] = useState<string>('uk');\n  const [companies, setCompanies] = useState<Array<CompanyLayout> | null>(null)\n  const [loading, setLoading] = useState<boolean>(false);\n  const [searchLocation, setSearchLocation] = useState<{lat: number, lon: number} | null>({lat: 50.8742724, lon: 0.6619475})\n\n  const fetchGoogleSheet = async () => {\n    await doc.useServiceAccountAuth(require('./SEACE Installer Locator-5a80e6b026be.json'));\n  }\n\n  // const onSearch = async (query: string) => {\n  //   const point = {lat: 51.5287714, lon: -0.2420237}\n  //   // const point = GMaps.getLocation(query)\n  // }\n\n  const fetchCompaniesForRegion = async (region: string) => {\n    try {\n      setLoading(true);\n      await doc.loadInfo();\n      console.log(doc.title);\n      const sheet = doc.sheetsByIndex[REGION_TO_SHEET_MAP['uk']]\n      const rows = await sheet.getRows({ limit: 25 });\n      setCompanies(rows);\n      console.log(rows);\n      \n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(error);\n    }\n  }\n\n  // Only once\n  useEffect(() => {fetchGoogleSheet()});\n\n  // Every region change\n  useEffect(() => {\n    fetchCompaniesForRegion(region);\n  }, [region]);\n\n  return (\n    <div className=\"map-screen\">\n      {/* <iframe\n        width=\"100%\"\n        height=\"100%\"\n        style={{border:0}}\n        src=\"https://www.google.com/maps/embed/v1/place?key=API_KEY\n          &q=Space+Needle,Seattle+WA\">\n      </iframe> */}\n      <Filter onSubmit={() => {}} loading={loading} companies={companies} searchLocation={searchLocation}/>\n      <MapLegend isOpened={true}/>\n      <MapRegionIndicator region={region}/>\n    </div>\n  );\n}\n\nexport default MapScreen;"]},"metadata":{},"sourceType":"module"}