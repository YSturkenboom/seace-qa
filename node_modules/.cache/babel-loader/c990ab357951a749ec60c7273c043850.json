{"ast":null,"code":"var _jsxFileName = \"/home/yuri/Freelance/Clients/Cheil/seace-qa/src/MapScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport './MapScreen.css';\nimport { GoogleMap, Marker } from \"react-google-maps\";\n\nconst {\n  GoogleSpreadsheet\n} = require('google-spreadsheet');\n\nconst doc = new GoogleSpreadsheet('1QtCGUCN-_xZPLYExN3btHeXphRi4VI-uGABA87cHj-M');\nconst REGION_TO_SHEET_MAP = {\n  'uk': 9\n};\n\nfunction MapScreen() {\n  const [region, setRegion] = useState('uk');\n  const [companies, setCompanies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchLocation, setSearchLocation] = useState({\n    lat: 50.8742724,\n    lon: 0.6619475\n  });\n\n  const fetchGoogleSheet = async () => {\n    await doc.useServiceAccountAuth(require('./SEACE Installer Locator-5a80e6b026be.json'));\n  }; // const onSearch = async (query: string) => {\n  //   const point = {lat: 51.5287714, lon: -0.2420237}\n  //   // const point = GMaps.getLocation(query)\n  // }\n\n\n  const fetchCompaniesForRegion = async region => {\n    try {\n      setLoading(true);\n      await doc.loadInfo();\n      console.log(doc.title);\n      const sheet = doc.sheetsByIndex[REGION_TO_SHEET_MAP['uk']];\n      const rows = await sheet.getRows();\n      setCompanies(rows);\n      console.log(rows);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(error);\n    }\n  }; // Only once\n\n\n  useEffect(() => {\n    fetchGoogleSheet();\n  }); // Every region change\n\n  useEffect(() => {\n    fetchCompaniesForRegion(region);\n  }, [region]);\n  const MyMapComponent = withScriptjs(withGoogleMap(props => /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 8,\n    defaultCenter: {\n      lat: -34.397,\n      lng: 150.644\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, props.isMarkerShown && /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: -34.397,\n      lng: 150.644\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 31\n    }\n  }))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 8,\n    defaultCenter: {\n      lat: -34.397,\n      lng: 150.644\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: -34.397,\n      lng: 150.644\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default MapScreen;","map":{"version":3,"sources":["/home/yuri/Freelance/Clients/Cheil/seace-qa/src/MapScreen.tsx"],"names":["React","useState","useEffect","GoogleMap","Marker","GoogleSpreadsheet","require","doc","REGION_TO_SHEET_MAP","MapScreen","region","setRegion","companies","setCompanies","loading","setLoading","searchLocation","setSearchLocation","lat","lon","fetchGoogleSheet","useServiceAccountAuth","fetchCompaniesForRegion","loadInfo","console","log","title","sheet","sheetsByIndex","rows","getRows","error","MyMapComponent","withScriptjs","withGoogleMap","props","lng","isMarkerShown"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MapScreen.css';\nimport { Filter } from './components/MapFilter'\nimport { MapLegend } from './components/MapLegend'\nimport { MapRegionIndicator } from './components/MapRegionIndicator';\nimport { CompanyLayout } from './interfaces';\nimport { GoogleMap, Marker } from \"react-google-maps\"\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n \nconst doc = new GoogleSpreadsheet('1QtCGUCN-_xZPLYExN3btHeXphRi4VI-uGABA87cHj-M');\n\nconst REGION_TO_SHEET_MAP = {\n  'uk': 9\n}\n\nfunction MapScreen() {\n  const [region, setRegion] = useState<string>('uk');\n  const [companies, setCompanies] = useState<Array<CompanyLayout> | null>(null)\n  const [loading, setLoading] = useState<boolean>(false);\n  const [searchLocation, setSearchLocation] = useState<{lat: number, lon: number} | null>({lat: 50.8742724, lon: 0.6619475})\n\n  const fetchGoogleSheet = async () => {\n    await doc.useServiceAccountAuth(require('./SEACE Installer Locator-5a80e6b026be.json'));\n  }\n\n  // const onSearch = async (query: string) => {\n  //   const point = {lat: 51.5287714, lon: -0.2420237}\n  //   // const point = GMaps.getLocation(query)\n  // }\n\n  const fetchCompaniesForRegion = async (region: string) => {\n    try {\n      setLoading(true);\n      await doc.loadInfo();\n      console.log(doc.title);\n      const sheet = doc.sheetsByIndex[REGION_TO_SHEET_MAP['uk']]\n      const rows = await sheet.getRows();\n      setCompanies(rows);\n      console.log(rows);\n      \n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(error);\n    }\n  }\n\n  // Only once\n  useEffect(() => {fetchGoogleSheet()});\n\n  // Every region change\n  useEffect(() => {\n    fetchCompaniesForRegion(region);\n  }, [region]);\n\n  const MyMapComponent = withScriptjs(withGoogleMap((props) =>\n    <GoogleMap\n      defaultZoom={8}\n      defaultCenter={{ lat: -34.397, lng: 150.644 }}\n    >\n      {props.isMarkerShown && <Marker position={{ lat: -34.397, lng: 150.644 }} />}\n    </GoogleMap>\n  ))\n\n  return (\n    <div className=\"map-screen\">\n      {/* <iframe\n        width=\"100%\"\n        height=\"100%\"\n        style={{border:0}}\n        src=\"https://www.google.com/maps/embed/v1/place?key=API_KEY\n          &q=Space+Needle,Seattle+WA\">\n      </iframe> */}\n      {/* <GoogleMapReact\n        bootstrapURLKeys={{ key: 'gme-samsungsds' }}\n        defaultCenter={{lat: 59.95, lng: 30.33}}\n        defaultZoom={11}\n      > */}\n        {/* <Filter onSubmit={() => {}} loading={loading} companies={companies} searchLocation={searchLocation}/>\n        <MapLegend isOpened={true}/>\n        <MapRegionIndicator region={region}/> */}\n      {/* </GoogleMapReact> */}\n      <GoogleMap\n        defaultZoom={8}\n        defaultCenter={{ lat: -34.397, lng: 150.644 }}\n      >\n        <Marker position={{ lat: -34.397, lng: 150.644 }} />\n      </GoogleMap>\n      \n    </div>\n  );\n}\n\nexport default MapScreen;"]},"metadata":{},"sourceType":"module"}