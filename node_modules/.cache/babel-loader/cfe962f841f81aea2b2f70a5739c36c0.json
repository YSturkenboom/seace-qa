{"ast":null,"code":"var _jsxFileName = \"/home/yuri/Freelance/Clients/Cheil/seace-qa/src/components/form/LocationCard.tsx\";\nimport React from 'react';\nimport { PinDropOutlined } from '@material-ui/icons';\n\nconst goToLocation = ({\n  mapRef,\n  lat,\n  lon\n}) => {\n  mapRef.current.panTo({\n    lat: parseFloat(String(lat)),\n    lng: parseFloat(String(lon))\n  });\n};\n\nexport const LocationCard = ({\n  lat,\n  lon,\n  name,\n  address,\n  telephone,\n  distance,\n  mapRef\n}) => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"map-search-location\",\n    onClick: () => goToLocation({\n      mapRef,\n      lat,\n      lon\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-search-location-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"map-search-location-info-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, name, \", \", (Math.round((distance + Number.EPSILON) * 100) / 100).toString(), \" miles\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, address), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"Phone: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"tel:{telephone}\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 31\n    }\n  }, telephone))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-search-location-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PinDropOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  })));\n};","map":{"version":3,"sources":["/home/yuri/Freelance/Clients/Cheil/seace-qa/src/components/form/LocationCard.tsx"],"names":["React","PinDropOutlined","goToLocation","mapRef","lat","lon","current","panTo","parseFloat","String","lng","LocationCard","name","address","telephone","distance","Math","round","Number","EPSILON","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;AASA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,GAAT;AAAcC,EAAAA;AAAd,CAAD,KAAwB;AACzCF,EAAAA,MAAM,CAACG,OAAP,CAAeC,KAAf,CAAqB;AAAEH,IAAAA,GAAG,EAAEI,UAAU,CAACC,MAAM,CAACL,GAAD,CAAP,CAAjB;AAAgCM,IAAAA,GAAG,EAAEF,UAAU,CAACC,MAAM,CAACJ,GAAD,CAAP;AAA/C,GAArB;AACH,CAFD;;AAIA,OAAO,MAAMM,YAAyC,GAAG,CAAC;AAAEP,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYO,EAAAA,IAAZ;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA,SAA3B;AAAsCC,EAAAA,QAAtC;AAAgDZ,EAAAA;AAAhD,CAAD,KAA8D;AAC/G,sBACI;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAwC,IAAA,OAAO,EAAE,MAAMD,YAAY,CAAC;AAACC,MAAAA,MAAD;AAASC,MAAAA,GAAT;AAAcC,MAAAA;AAAd,KAAD,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CO,IAA/C,QAAuD,CAACI,IAAI,CAACC,KAAL,CAAW,CAACF,QAAQ,GAAGG,MAAM,CAACC,OAAnB,IAA8B,GAAzC,IAAgD,GAAjD,EAAsDC,QAAtD,EAAvD,WADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,OAAJ,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAU;AAAG,IAAA,IAAI,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,SAA3B,CAAV,CAHJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CADJ;AAYP,CAbM","sourcesContent":["import React from 'react'\nimport { PinDropOutlined } from '@material-ui/icons';\n\ninterface LocationCardProps {\n    name: string;\n    address: string;\n    telephone: string | number;\n    distance: number;\n}\n\nconst goToLocation = ({mapRef, lat, lon}) => {\n    mapRef.current.panTo({ lat: parseFloat(String(lat)), lng: parseFloat(String(lon))});\n}\n\nexport const LocationCard: React.FC<LocationCardProps> = ({ lat, lon, name, address, telephone, distance, mapRef }) => {\n        return (\n            <button className=\"map-search-location\" onClick={() => goToLocation({mapRef, lat, lon})}>\n                <div className=\"map-search-location-info\">\n                    <p className=\"map-search-location-info-title\">{name}, {(Math.round((distance + Number.EPSILON) * 100) / 100).toString()} miles</p>\n                    <p>{address}</p>\n                    <p>Phone: <a href=\"tel:{telephone}\">{telephone}</a></p>\n                </div>\n                <div className=\"map-search-location-icons\">\n                    <PinDropOutlined />\n                </div>\n            </button>\n        );\n}"]},"metadata":{},"sourceType":"module"}