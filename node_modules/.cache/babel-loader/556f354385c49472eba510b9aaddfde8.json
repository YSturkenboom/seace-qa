{"ast":null,"code":"var _jsxFileName = \"/home/yuri/Freelance/Clients/Cheil/seace-qa/src/components/form/LocationCard.tsx\";\nimport React from 'react';\nimport { ReactComponent as Home } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../home.svg\";\nimport { ReactComponent as Biz } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../biz.svg\";\nimport { ReactComponent as Both } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../both.svg\";\n\nconst goToLocation = ({\n  mapRef,\n  lat,\n  lon\n}) => {\n  if (mapRef && mapRef.current) {\n    mapRef.current.panTo({\n      lat: parseFloat(String(lat)),\n      lng: parseFloat(String(lon))\n    });\n  }\n};\n\nexport const LocationCard = ({\n  lat,\n  lon,\n  name,\n  address,\n  telephone,\n  distance,\n  mapRef,\n  setActivePlace,\n  installerType\n}) => {\n  let icon;\n\n  if (installerType === 'For home') {\n    icon = /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }\n    });\n  } else if (installerType === 'For business') {\n    icon = /*#__PURE__*/React.createElement(Biz, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    });\n  } else {\n    icon = /*#__PURE__*/React.createElement(Both, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"map-search-location\",\n    onClick: () => {\n      goToLocation({\n        mapRef,\n        lat,\n        lon\n      });\n      setActivePlace(name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-search-location-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"map-search-location-info-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, name, \", \", (Math.round((distance + Number.EPSILON) * 100) / 100).toString(), \" miles\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, address), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Phone: \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"tel:{telephone}\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 31\n    }\n  }, telephone))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-search-location-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, icon, \"}\"));\n};","map":{"version":3,"sources":["/home/yuri/Freelance/Clients/Cheil/seace-qa/src/components/form/LocationCard.tsx"],"names":["React","goToLocation","mapRef","lat","lon","current","panTo","parseFloat","String","lng","LocationCard","name","address","telephone","distance","setActivePlace","installerType","icon","Math","round","Number","EPSILON","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAmBA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,GAAT;AAAcC,EAAAA;AAAd,CAAD,KAAyF;AAC1G,MAAKF,MAAM,IAAIA,MAAM,CAACG,OAAtB,EAA+B;AAC3BH,IAAAA,MAAM,CAACG,OAAP,CAAeC,KAAf,CAAqB;AAAEH,MAAAA,GAAG,EAAEI,UAAU,CAACC,MAAM,CAACL,GAAD,CAAP,CAAjB;AAAgCM,MAAAA,GAAG,EAAEF,UAAU,CAACC,MAAM,CAACJ,GAAD,CAAP;AAA/C,KAArB;AACH;AACJ,CAJD;;AAMA,OAAO,MAAMM,YAAyC,GAAG,CAAC;AAAEP,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYO,EAAAA,IAAZ;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA,SAA3B;AAAsCC,EAAAA,QAAtC;AAAgDZ,EAAAA,MAAhD;AAAwDa,EAAAA,cAAxD;AAAwEC,EAAAA;AAAxE,CAAD,KAA6F;AAClJ,MAAIC,IAAJ;;AACA,MAAID,aAAa,KAAK,UAAtB,EAAkC;AAC9BC,IAAAA,IAAI,gBAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO,IAAID,aAAa,KAAK,cAAtB,EAAsC;AACzCC,IAAAA,IAAI,gBAAG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFM,MAEA;AACHA,IAAAA,IAAI,gBAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACG,sBACI;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAwC,IAAA,OAAO,EAAE,MAAM;AACnDhB,MAAAA,YAAY,CAAC;AAACC,QAAAA,MAAD;AAASC,QAAAA,GAAT;AAAcC,QAAAA;AAAd,OAAD,CAAZ;AACAW,MAAAA,cAAc,CAACJ,IAAD,CAAd;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CA,IAA/C,QAAuD,CAACO,IAAI,CAACC,KAAL,CAAW,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAnB,IAA8B,GAAzC,IAAgD,GAAjD,EAAsDC,QAAtD,EAAvD,WADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,OAAJ,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAU;AAAG,IAAA,IAAI,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,SAA3B,CAAV,CAHJ,CAJJ,eASI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,IADL,MATJ,CADJ;AAeP,CAxBM","sourcesContent":["import React from 'react'\nimport { PinDropOutlined } from '@material-ui/icons';\nimport { GoogleMap } from \"react-google-maps\"\nimport {ReactComponent as Home} from '../../home.svg';\nimport {ReactComponent as Biz} from '../../biz.svg';\nimport {ReactComponent as Both} from '../../both.svg';\n\ninterface LocationCardProps {\n    name: string;\n    address: string;\n    telephone: string | number;\n    distance: number;\n    mapRef: React.RefObject<GoogleMap>;\n    lat: number;\n    lon: number;\n    setActivePlace: React.Dispatch<React.SetStateAction<string | null | undefined>>;\n    installerType: string;\n}\n\nconst goToLocation = ({mapRef, lat, lon} : {mapRef: React.RefObject<GoogleMap>, lat: number, lon: number}) => {\n    if ( mapRef && mapRef.current) {\n        mapRef.current.panTo({ lat: parseFloat(String(lat)), lng: parseFloat(String(lon))});\n    }\n}\n\nexport const LocationCard: React.FC<LocationCardProps> = ({ lat, lon, name, address, telephone, distance, mapRef, setActivePlace, installerType }) => {\n    let icon;\n    if (installerType === 'For home') {\n        icon = <Home />;\n    } else if (installerType === 'For business') {\n        icon = <Biz />;\n    } else {\n        icon = <Both />;\n    }\n        return (\n            <button className=\"map-search-location\" onClick={() => { \n                goToLocation({mapRef, lat, lon});\n                setActivePlace(name);\n            }}>\n                <div className=\"map-search-location-info\">\n                    <p className=\"map-search-location-info-title\">{name}, {(Math.round((distance + Number.EPSILON) * 100) / 100).toString()} miles</p>\n                    <p>{address}</p>\n                    <p>Phone: <a href=\"tel:{telephone}\">{telephone}</a></p>\n                </div>\n                <div className=\"map-search-location-icons\">\n                    {icon}}\n                </div>\n            </button>\n        );\n}"]},"metadata":{},"sourceType":"module"}