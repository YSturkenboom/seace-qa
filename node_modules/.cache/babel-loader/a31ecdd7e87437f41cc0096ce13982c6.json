{"ast":null,"code":"var _jsxFileName=\"/home/yuri/Freelance/Clients/Cheil/seace-qa/src/MapScreen.tsx\";/// @ts-nocheck\nimport React,{useState,useEffect,Fragment}from'react';import'./MapScreen.css';import{Filter}from'./components/MapFilter';import{MapLegend}from'./components/MapLegend';import{MapRegionIndicator}from'./components/MapRegionIndicator';import{withScriptjs,withGoogleMap,GoogleMap,Marker,InfoWindow}from\"react-google-maps\";const{GoogleSpreadsheet}=require('google-spreadsheet');const doc=new GoogleSpreadsheet('1QtCGUCN-_xZPLYExN3btHeXphRi4VI-uGABA87cHj-M');const REGION_TO_SHEET_MAP={'UK':9,'Greece':10,'Spain':1};function MapScreen(){const[region,setRegion]=useState('Spain');const[companies,setCompanies]=useState(null);const[loading,setLoading]=useState(false);const[searchLocation,setSearchLocation]=useState({lat:50.8742724,lon:0.6619475});const[activePlace,setActivePlace]=useState();const mapRef=React.createRef();const fetchGoogleSheet=async()=>{await doc.useServiceAccountAuth(require('./SEACE Installer Locator-5a80e6b026be.json'));};// const onSearch = async (query: string) => {\n//   const point = {lat: 51.5287714, lon: -0.2420237}\n//   // const point = GMaps.getLocation(query)\n// }\nconst fetchCompaniesForRegion=async region=>{try{setLoading(true);await doc.loadInfo();console.log(doc.title);const sheet=doc.sheetsByIndex[REGION_TO_SHEET_MAP[region]];const rows=await sheet.getRows();setCompanies(rows);console.log(rows);setLoading(false);}catch(error){setLoading(false);console.error(error);}};// Only once\nuseEffect(()=>{fetchGoogleSheet();});// Every region change\nuseEffect(()=>{fetchCompaniesForRegion(region);},[region]);const MyMapComponent=withScriptjs(withGoogleMap(props=>/*#__PURE__*/React.createElement(GoogleMap,{defaultZoom:8,defaultCenter:{lat:51.8266266,lng:-2.2714084},ref:mapRef,__self:this,__source:{fileName:_jsxFileName,lineNumber:63,columnNumber:5}},companies&&companies.map(c=>{const productType=String(c['Product Type']).toLowerCase();const position={lat:parseFloat(String(c['Latitude'])),lng:parseFloat(String(c['Longitude']))};// const icon = productType === 'cooling' ? require('./cool.png') : require('./heat.png')\nreturn/*#__PURE__*/React.createElement(Marker,{position:position,onClick:()=>{mapRef.current.panTo({lat:parseFloat(String(c['Latitude'])),lng:parseFloat(String(c['Longitude']))});setActivePlace(c['Company name']);}// icon={{url: icon}}\n,__self:this,__source:{fileName:_jsxFileName,lineNumber:73,columnNumber:16}},activePlace&&activePlace===c['Company name']&&/*#__PURE__*/React.createElement(InfoWindow,{__self:this,__source:{fileName:_jsxFileName,lineNumber:83,columnNumber:13}},/*#__PURE__*/React.createElement(Fragment,{__self:this,__source:{fileName:_jsxFileName,lineNumber:84,columnNumber:15}},/*#__PURE__*/React.createElement(\"p\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:85,columnNumber:17}},c['Company name']),/*#__PURE__*/React.createElement(\"p\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:86,columnNumber:17}},c['Street Address']),/*#__PURE__*/React.createElement(\"p\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:87,columnNumber:17}},c['City']),/*#__PURE__*/React.createElement(\"p\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:88,columnNumber:17}},c['Installer Type']),/*#__PURE__*/React.createElement(\"p\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:89,columnNumber:17}},c['Website']),/*#__PURE__*/React.createElement(\"p\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:90,columnNumber:17}},\"Contact Name: \",c['Contact Name']),/*#__PURE__*/React.createElement(\"p\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:91,columnNumber:17}},c['Email']),/*#__PURE__*/React.createElement(\"p\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:92,columnNumber:17}},c['Phone number']))));}))));return/*#__PURE__*/ (/*<div className=\"map-screen\">*/ /* <iframe\n        width=\"100%\"\n        height=\"100%\"\n        style={{border:0}}\n        src=\"https://www.google.com/maps/embed/v1/place?key=API_KEY\n          &q=Space+Needle,Seattle+WA\">\n      </iframe> */ /* <GoogleMapReact\n        bootstrapURLKeys={{ key: 'gme-samsungsds' }}\n        defaultCenter={{lat: 59.95, lng: 30.33}}\n        defaultZoom={11}\n      > */React.createElement(\"div\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:117,columnNumber:7}},/*#__PURE__*/React.createElement(MyMapComponent,{className:\"map-screen\",isMarkerShown:true,googleMapURL:\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:`100%`},__self:this,__source:{fileName:_jsxFileName,lineNumber:122,columnNumber:27}}),containerElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:`100vh`},__self:this,__source:{fileName:_jsxFileName,lineNumber:123,columnNumber:29}}),mapElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:`100%`},__self:this,__source:{fileName:_jsxFileName,lineNumber:124,columnNumber:23}}),__self:this,__source:{fileName:_jsxFileName,lineNumber:118,columnNumber:9}}),/*#__PURE__*/React.createElement(Filter,{onSubmit:()=>{},loading:loading,companies:companies,searchLocation:searchLocation,mapRef:mapRef,setActivePlace:setActivePlace,__self:this,__source:{fileName:_jsxFileName,lineNumber:127,columnNumber:9}}),/*#__PURE__*/React.createElement(MapLegend,{isOpened:true,__self:this,__source:{fileName:_jsxFileName,lineNumber:128,columnNumber:9}}),/*#__PURE__*/React.createElement(MapRegionIndicator,{region:region,__self:this,__source:{fileName:_jsxFileName,lineNumber:129,columnNumber:9}})));}export default MapScreen;","map":{"version":3,"sources":["/home/yuri/Freelance/Clients/Cheil/seace-qa/src/MapScreen.tsx"],"names":["React","useState","useEffect","Fragment","Filter","MapLegend","MapRegionIndicator","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","GoogleSpreadsheet","require","doc","REGION_TO_SHEET_MAP","MapScreen","region","setRegion","companies","setCompanies","loading","setLoading","searchLocation","setSearchLocation","lat","lon","activePlace","setActivePlace","mapRef","createRef","fetchGoogleSheet","useServiceAccountAuth","fetchCompaniesForRegion","loadInfo","console","log","title","sheet","sheetsByIndex","rows","getRows","error","MyMapComponent","props","lng","map","c","productType","String","toLowerCase","position","parseFloat","current","panTo","height"],"mappings":"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","sourcesContent":["/// @ts-nocheck\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './MapScreen.css';\nimport { Filter } from './components/MapFilter'\nimport { MapLegend } from './components/MapLegend'\nimport { MapRegionIndicator } from './components/MapRegionIndicator';\nimport { CompanyLayout, LocationLayout } from './interfaces';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n \nconst doc = new GoogleSpreadsheet('1QtCGUCN-_xZPLYExN3btHeXphRi4VI-uGABA87cHj-M');\n\nconst REGION_TO_SHEET_MAP = {\n  'UK': 9,\n  'Greece': 10,\n  'Spain': 1\n}\n\nfunction MapScreen() {\n  const [region, setRegion] = useState<string>('Spain');\n  const [companies, setCompanies] = useState<Array<CompanyLayout> | null>(null)\n  const [loading, setLoading] = useState<boolean>(false);\n  const [searchLocation, setSearchLocation] = useState<LocationLayout | null>({lat: 50.8742724, lon: 0.6619475})\n  const [activePlace, setActivePlace] = useState<string | null>();\n\n  const mapRef = React.createRef<React.RefObject<GoogleMap>>();\n  const fetchGoogleSheet = async () => {\n    await doc.useServiceAccountAuth(require('./SEACE Installer Locator-5a80e6b026be.json'));\n  }\n\n  // const onSearch = async (query: string) => {\n  //   const point = {lat: 51.5287714, lon: -0.2420237}\n  //   // const point = GMaps.getLocation(query)\n  // }\n\n  const fetchCompaniesForRegion = async (region: string) => {\n    try {\n      setLoading(true);\n      await doc.loadInfo();\n      console.log(doc.title);\n      const sheet = doc.sheetsByIndex[REGION_TO_SHEET_MAP[region]]\n      const rows = await sheet.getRows();\n      setCompanies(rows);\n      console.log(rows);\n      \n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.error(error);\n    }\n  }\n\n  // Only once\n  useEffect(() => {fetchGoogleSheet()});\n\n  // Every region change\n  useEffect(() => {\n    fetchCompaniesForRegion(region);\n  }, [region]);\n\n  const MyMapComponent = withScriptjs(withGoogleMap((props) =>\n    <GoogleMap\n      defaultZoom={8}\n      defaultCenter={{ lat: 51.8266266, lng: -2.2714084 }}\n      ref={mapRef}\n    >\n      {companies && companies.map(c => {\n        const productType = String(c['Product Type']).toLowerCase();\n        const position = { lat: parseFloat(String(c['Latitude'])), lng: parseFloat(String(c['Longitude'])) };\n        // const icon = productType === 'cooling' ? require('./cool.png') : require('./heat.png')\n\n        return <Marker \n          position={position} \n          onClick={() =>{\n            mapRef.current.panTo({ lat: parseFloat(String(c['Latitude'])), lng: parseFloat(String(c['Longitude'])) });\n            setActivePlace(c['Company name']);\n          }}\n          // icon={{url: icon}}\n        >\n          {/* If this place is active, show the popup with the place information */}\n          {activePlace && activePlace === c['Company name'] &&\n            <InfoWindow>\n              <Fragment>\n                <p>{c['Company name']}</p>\n                <p>{c['Street Address']}</p>\n                <p>{c['City']}</p>\n                <p>{c['Installer Type']}</p>\n                <p>{c['Website']}</p>\n                <p>Contact Name: {c['Contact Name']}</p>\n                <p>{c['Email']}</p>\n                <p>{c['Phone number']}</p>\n              </Fragment>\n            </InfoWindow>\n          }\n          \n        </Marker>\n      })}\n      {/* <Marker position={{ lat: 51.8266266, lng: 150.644 }} /> */}\n    </GoogleMap>\n  ))\n\n  return (\n    /*<div className=\"map-screen\">*/\n      /* <iframe\n        width=\"100%\"\n        height=\"100%\"\n        style={{border:0}}\n        src=\"https://www.google.com/maps/embed/v1/place?key=API_KEY\n          &q=Space+Needle,Seattle+WA\">\n      </iframe> */\n      /* <GoogleMapReact\n        bootstrapURLKeys={{ key: 'gme-samsungsds' }}\n        defaultCenter={{lat: 59.95, lng: 30.33}}\n        defaultZoom={11}\n      > */\n      <div>\n        <MyMapComponent\n          className=\"map-screen\"\n          isMarkerShown={true}\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `100vh` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        >\n        </MyMapComponent>\n        <Filter onSubmit={() => {}} loading={loading} companies={companies} searchLocation={searchLocation} mapRef={mapRef} setActivePlace={setActivePlace}/>\n        <MapLegend isOpened={true}/>\n        <MapRegionIndicator region={region}/>\n      </div>\n  );\n}\n\nexport default MapScreen;"]},"metadata":{},"sourceType":"module"}