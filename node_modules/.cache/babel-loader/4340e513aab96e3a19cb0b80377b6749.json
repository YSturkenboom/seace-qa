{"ast":null,"code":"var _jsxFileName = \"/home/yuri/Freelance/Clients/Cheil/seace-qa/src/components/MapFilter.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Radio, Card, RadioGroup, FormControlLabel } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport { FilterTextField } from './form/FilterTextField';\nimport { LocationCard } from './form/LocationCard';\nimport { Search } from '@material-ui/icons';\n\nconst distanceToTarget = (location, locationTarget) => {\n  // TODO: Replace with maps distance\n  var a = location.lat - locationTarget.lat;\n  var b = location.lon - locationTarget.lon;\n  return Math.sqrt(a * a + b * b);\n};\n\nconst filterCompanies = (companies, distance, searchLocation, storeType, searchType) => {\n  // Filter on type first for performance\n  let filteredCompanies = companies;\n\n  if (searchType === 'advanced' && (storeType === 'For home' || storeType === 'For business')) {\n    filteredCompanies = filteredCompanies.filter(c => c['Installer Type'] === storeType || c['Installer Type'] === 'For home and business');\n  } // Calculate distance\n\n\n  filteredCompanies = filteredCompanies.map(c => {\n    console.log({\n      storeType: storeType,\n      type: c['Installer Type']\n    });\n    console.log({\n      lat: parseFloat(String(c['Latitude'])),\n      lon: parseFloat(String(c['Longitude']))\n    });\n    const location = {\n      lat: parseFloat(String(c['Latitude'])),\n      lon: parseFloat(String(c['Longitude']))\n    };\n    c.distanceToTarget = distanceToTarget(location, searchLocation);\n    return c;\n  }); // Filter on distance\n\n  return filteredCompanies.filter(c => c.distanceToTarget <= distance);\n};\n\nexport const Filter = ({\n  onSubmit,\n  loading,\n  companies,\n  searchLocation\n}) => {\n  const [distance, setDistance] = useState(10);\n  const [filteredCompanies, setFilteredCompanies] = useState(companies);\n  const [searchType, setSearchType] = useState('simple');\n  const [advDropDownIsOpen, setadvDropDownIsOpen] = useState(true);\n  const [storeType, setStoreType] = useState('For home & business'); // Every filter change, or when companies load in\n\n  useEffect(() => {\n    if (companies && searchLocation) {\n      setFilteredCompanies(filterCompanies(companies, distance, searchLocation, storeType, searchType));\n    }\n  }, [distance, searchLocation, companies, storeType, searchType]);\n  return /*#__PURE__*/React.createElement(Card, {\n    raised: true,\n    className: \"map-search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-search-box-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"map-search-box-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Installer Locator\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Information on this page is subject to change without prior notice. Please contact the installer directly for up to date information.\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-search-box-form-searchtype\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setSearchType(\"simple\"),\n    className: \"map-search-box-form-distance-btn\" + (searchType === 'simple' ? \" btn-active\" : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setSearchType(\"advanced\"),\n    className: \"map-search-box-form-distance-btn\" + (searchType !== 'simple' ? \" btn-active\" : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Advanced Search\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      address: \"\",\n      distanceInKilometers: 10\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, ({\n    values\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"map-search-box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-search-box-form-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"address\",\n    placeholder: \"Address or post code...\",\n    component: FilterTextField,\n    className: \"map-search-box-form-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 41\n    }\n  }, \" \"))), /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    onChange: e => setDistance(parseInt(e.target.value)),\n    \"aria-label\": \"position\",\n    name: \"position\",\n    defaultValue: \"top\",\n    className: \"map-search-box-form-distance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"0.1\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 50\n      }\n    }),\n    label: \"1 mile\",\n    labelPlacement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"2\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 50\n      }\n    }),\n    label: \"2 miles\",\n    labelPlacement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"5\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 50\n      }\n    }),\n    label: \"5 miles\",\n    labelPlacement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"10\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 50\n      }\n    }),\n    label: \"10 miles\",\n    labelPlacement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }))))), searchType === 'advanced' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-search-box-advanced\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Store Type\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setadvDropDownIsOpen(!advDropDownIsOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, advDropDownIsOpen ? '-' : '+'), advDropDownIsOpen && /*#__PURE__*/React.createElement(RadioGroup, {\n    onChange: e => setStoreType(e.target.value),\n    \"aria-label\": \"position\",\n    name: \"position\",\n    defaultValue: \"For home and business\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"For home\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 42\n      }\n    }),\n    label: \"For Home\",\n    labelPlacement: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"For business\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 42\n      }\n    }),\n    label: \"For Business\",\n    labelPlacement: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"For home & business\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 42\n      }\n    }),\n    label: \"For Home & Business\",\n    labelPlacement: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-search-box-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, loading ? 'Loading...' : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, filteredCompanies && filteredCompanies.map(c => /*#__PURE__*/React.createElement(LocationCard, {\n    name: c['Company name'],\n    telephone: c['Phone number'],\n    address: c['Street Address'],\n    distance: c.distanceToTarget,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  })))));\n};\n/* <p>Text</p>\n<div>\n    <button onClick={}>Search</button>\n    <button>Advanced search</button>\n</div>\n<input onChange={(e) => setQuery(e.target.value)} value={query} placeholder={'Postcode or address...'} /> */","map":{"version":3,"sources":["/home/yuri/Freelance/Clients/Cheil/seace-qa/src/components/MapFilter.tsx"],"names":["React","useState","useEffect","Button","Radio","Card","RadioGroup","FormControlLabel","Formik","Form","Field","FilterTextField","LocationCard","Search","distanceToTarget","location","locationTarget","a","lat","b","lon","Math","sqrt","filterCompanies","companies","distance","searchLocation","storeType","searchType","filteredCompanies","filter","c","map","console","log","type","parseFloat","String","Filter","onSubmit","loading","setDistance","setFilteredCompanies","setSearchType","advDropDownIsOpen","setadvDropDownIsOpen","setStoreType","address","distanceInKilometers","values","e","parseInt","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Radio, Card, RadioGroup, FormControlLabel } from '@material-ui/core';\nimport { Formik, Form, Field } from 'formik';\nimport { FilterTextField } from './form/FilterTextField';\nimport { LocationCard } from './form/LocationCard';\nimport { Search } from '@material-ui/icons';\nimport { CompanyLayout, LocationLayout } from '../interfaces';\n\ninterface Values {\n    address: string;\n    distanceInKilometers: number;\n}\n  \ninterface Props {\n    onSubmit: (values: Values) => void;\n    companies: Array<CompanyLayout> | null;\n    loading: boolean;\n    searchLocation: LocationLayout | null;\n}\n\nconst distanceToTarget = (location: LocationLayout, locationTarget: LocationLayout) => {\n\n    // TODO: Replace with maps distance\n    var a = location.lat - locationTarget.lat;\n    var b = location.lon - locationTarget.lon;    \n    return Math.sqrt( a*a + b*b );\n};\n\nconst filterCompanies = (companies: Array<CompanyLayout>, distance: number, searchLocation: LocationLayout, storeType: string, searchType: string): Array<CompanyLayout> => {\n    // Filter on type first for performance\n    let filteredCompanies = companies\n    if (searchType === 'advanced' && (storeType === 'For home' || storeType === 'For business')) {\n        filteredCompanies =  filteredCompanies.filter(c => c['Installer Type'] === storeType || c['Installer Type'] === 'For home and business');\n    }\n\n    // Calculate distance\n    filteredCompanies = filteredCompanies.map(c => {\n        console.log({storeType: storeType, type: c['Installer Type']});\n        console.log({lat: parseFloat(String(c['Latitude'])), lon: parseFloat(String(c['Longitude']))});\n        \n        const location = {\n            lat: parseFloat(String(c['Latitude'])),\n            lon: parseFloat(String(c['Longitude']))\n        }\n        c.distanceToTarget = distanceToTarget(location, searchLocation);\n        return c;\n    })\n\n    // Filter on distance\n\n    return filteredCompanies.filter(c => c.distanceToTarget <= distance);\n}\n\nexport const Filter: React.FC<Props> = ({ onSubmit, loading, companies, searchLocation }) => {\n    const [distance, setDistance] = useState<number>(10);\n    const [filteredCompanies, setFilteredCompanies] = useState(companies);\n    const [searchType, setSearchType] = useState<'simple' | 'advanced'>('simple');\n    const [advDropDownIsOpen, setadvDropDownIsOpen] = useState<boolean>(true);\n    const [storeType, setStoreType] = useState<string>('For home & business')\n\n    // Every filter change, or when companies load in\n    useEffect(() => {\n        if (companies && searchLocation) {\n            setFilteredCompanies(filterCompanies(companies, distance, searchLocation, storeType, searchType));\n        }\n    }, [distance, searchLocation, companies, storeType, searchType]);\n\n    return (\n        <Card raised className=\"map-search-box\">\n            <div className=\"map-search-box-header\">\n                <h1 className=\"map-search-box-heading\">Installer Locator</h1>\n                <p>Information on this page is subject to change without prior notice. Please contact the installer directly for up to date information.</p>\n            </div>\n            \n            <div>\n                <div className=\"map-search-box-form-searchtype\">\n                    <Button \n                        onClick={() => setSearchType(\"simple\")}\n                        className={\"map-search-box-form-distance-btn\" + (searchType === 'simple' ? \" btn-active\" : '')}\n                    >\n                        Search\n                    </Button>\n                    <Button\n                        onClick={() => setSearchType(\"advanced\")}\n                        className={\"map-search-box-form-distance-btn\" + (searchType !== 'simple' ? \" btn-active\" : '')}\n                    >\n                        Advanced Search\n                    </Button>\n                </div>\n\n                <Formik \n                    initialValues={{\n                        address: \"\",\n                        distanceInKilometers: 10,\n                    }}\n                    onSubmit={onSubmit}\n                >\n                    {({ values }) => (\n                        <Form className=\"map-search-box-form\">\n                                <div className=\"map-search-box-form-search\">\n                                    <Field\n                                        name=\"address\"\n                                        placeholder=\"Address or post code...\"\n                                        component={FilterTextField}\n                                        className=\"map-search-box-form-search\"\n                                    />\n                                    <Button type=\"submit\">\n                                        <Search> </Search>\n                                    </Button>\n                                </div>\n\n                                <RadioGroup row onChange={e => setDistance(parseInt(e.target.value))}  aria-label=\"position\" name=\"position\" defaultValue=\"top\" className=\"map-search-box-form-distance\">\n                                    <FormControlLabel\n                                        value=\"0.1\"\n                                        control={<Radio color=\"primary\" />}\n                                        label=\"1 mile\"\n                                        labelPlacement=\"top\"\n                                    />\n                                    <FormControlLabel\n                                        value=\"2\"\n                                        control={<Radio color=\"primary\" />}\n                                        label=\"2 miles\"\n                                        labelPlacement=\"top\"\n                                    />\n                                    <FormControlLabel\n                                        value=\"5\"\n                                        control={<Radio color=\"primary\" />}\n                                        label=\"5 miles\"\n                                        labelPlacement=\"top\"\n                                    />\n                                    <FormControlLabel\n                                        value=\"10\"\n                                        control={<Radio color=\"primary\" />}\n                                        label=\"10 miles\"\n                                        labelPlacement=\"top\"\n                                    />\n                                </RadioGroup>\n                        </Form>\n                    )}\n                    \n                </Formik>\n            </div>\n\n            {searchType === 'advanced' &&\n                <div className=\"map-search-box-advanced\">\n                    <p>Store Type</p>\n                    <Button onClick={() => setadvDropDownIsOpen(!advDropDownIsOpen)}>\n                        {advDropDownIsOpen ? '-' : '+'}\n                    </Button>\n                    {advDropDownIsOpen &&\n                        <RadioGroup onChange={e => setStoreType(e.target.value)} aria-label=\"position\" name=\"position\" defaultValue=\"For home and business\">\n                            <FormControlLabel\n                                value=\"For home\"\n                                control={<Radio color=\"primary\" />}\n                                label=\"For Home\"\n                                labelPlacement=\"end\"\n                            />\n                            <FormControlLabel\n                                value=\"For business\"\n                                control={<Radio color=\"primary\" />}\n                                label=\"For Business\"\n                                labelPlacement=\"end\"\n                            />\n                            <FormControlLabel\n                                value='For home & business'\n                                control={<Radio color=\"primary\" />}\n                                label=\"For Home & Business\"\n                                labelPlacement=\"end\"\n                            />\n                        </RadioGroup>\n                    }\n                </div>\n            }\n\n            <div className=\"map-search-box-footer\">\n                {loading ? (\n                    'Loading...'\n                ) : (\n                    <div>\n                        {filteredCompanies && filteredCompanies.map(c =>\n                            <LocationCard\n                                name={c['Company name']}\n                                telephone={c['Phone number']}\n                                address={c['Street Address']}\n                                distance={c.distanceToTarget}\n                            />\n                        )}\n                    </div>\n                )}\n            </div>\n        </Card>\n    );\n}\n\n            /* <p>Text</p>\n            <div>\n                <button onClick={}>Search</button>\n                <button>Advanced search</button>\n            </div>\n            <input onChange={(e) => setQuery(e.target.value)} value={query} placeholder={'Postcode or address...'} /> */"]},"metadata":{},"sourceType":"module"}