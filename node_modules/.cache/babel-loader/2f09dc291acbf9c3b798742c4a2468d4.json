{"ast":null,"code":"var _jsxFileName=\"/home/yuri/Freelance/Clients/Cheil/seace-qa/src/components/form/LocationCard.tsx\";import React from'react';import{PinDropOutlined}from'@material-ui/icons';const goToLocation=({mapRef,lat,lon})=>{if(mapRef&&mapRef.current){mapRef.current.panTo({lat:parseFloat(String(lat)),lng:parseFloat(String(lon))});}};export const LocationCard=({lat,lon,name,address,telephone,distance,mapRef,setActivePlace})=>{return/*#__PURE__*/React.createElement(\"button\",{className:\"map-search-location\",onClick:()=>{goToLocation({mapRef,lat,lon});setActivePlace(name);},__self:this,__source:{fileName:_jsxFileName,lineNumber:24,columnNumber:13}},/*#__PURE__*/React.createElement(\"div\",{className:\"map-search-location-info\",__self:this,__source:{fileName:_jsxFileName,lineNumber:28,columnNumber:17}},/*#__PURE__*/React.createElement(\"p\",{className:\"map-search-location-info-title\",__self:this,__source:{fileName:_jsxFileName,lineNumber:29,columnNumber:21}},name,\", \",(Math.round((distance+Number.EPSILON)*100)/100).toString(),\" miles\"),/*#__PURE__*/React.createElement(\"p\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:30,columnNumber:21}},address),/*#__PURE__*/React.createElement(\"p\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:31,columnNumber:21}},\"Phone: \",/*#__PURE__*/React.createElement(\"a\",{href:\"tel:{telephone}\",__self:this,__source:{fileName:_jsxFileName,lineNumber:31,columnNumber:31}},telephone))),/*#__PURE__*/React.createElement(\"div\",{className:\"map-search-location-icons\",__self:this,__source:{fileName:_jsxFileName,lineNumber:33,columnNumber:17}},/*#__PURE__*/React.createElement(PinDropOutlined,{__self:this,__source:{fileName:_jsxFileName,lineNumber:34,columnNumber:21}})));};","map":{"version":3,"sources":["/home/yuri/Freelance/Clients/Cheil/seace-qa/src/components/form/LocationCard.tsx"],"names":["React","PinDropOutlined","goToLocation","mapRef","lat","lon","current","panTo","parseFloat","String","lng","LocationCard","name","address","telephone","distance","setActivePlace","Math","round","Number","EPSILON","toString"],"mappings":"oGAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,eAAT,KAAgC,oBAAhC,CAcA,KAAMC,CAAAA,YAAY,CAAG,CAAC,CAACC,MAAD,CAASC,GAAT,CAAcC,GAAd,CAAD,GAAyF,CAC1G,GAAKF,MAAM,EAAIA,MAAM,CAACG,OAAtB,CAA+B,CAC3BH,MAAM,CAACG,OAAP,CAAeC,KAAf,CAAqB,CAAEH,GAAG,CAAEI,UAAU,CAACC,MAAM,CAACL,GAAD,CAAP,CAAjB,CAAgCM,GAAG,CAAEF,UAAU,CAACC,MAAM,CAACJ,GAAD,CAAP,CAA/C,CAArB,EACH,CACJ,CAJD,CAMA,MAAO,MAAMM,CAAAA,YAAyC,CAAG,CAAC,CAAEP,GAAF,CAAOC,GAAP,CAAYO,IAAZ,CAAkBC,OAAlB,CAA2BC,SAA3B,CAAsCC,QAAtC,CAAgDZ,MAAhD,CAAwDa,cAAxD,CAAD,GAA8E,CAC/H,mBACI,8BAAQ,SAAS,CAAC,qBAAlB,CAAwC,OAAO,CAAE,IAAM,CACnDd,YAAY,CAAC,CAACC,MAAD,CAASC,GAAT,CAAcC,GAAd,CAAD,CAAZ,CACAW,cAAc,CAACJ,IAAD,CAAd,CACH,CAHD,0FAII,2BAAK,SAAS,CAAC,0BAAf,0FACI,yBAAG,SAAS,CAAC,gCAAb,6EAA+CA,IAA/C,MAAuD,CAACK,IAAI,CAACC,KAAL,CAAW,CAACH,QAAQ,CAAGI,MAAM,CAACC,OAAnB,EAA8B,GAAzC,EAAgD,GAAjD,EAAsDC,QAAtD,EAAvD,UADJ,cAEI,qGAAIR,OAAJ,CAFJ,cAGI,4HAAU,yBAAG,IAAI,CAAC,iBAAR,6EAA2BC,SAA3B,CAAV,CAHJ,CAJJ,cASI,2BAAK,SAAS,CAAC,2BAAf,0FACI,oBAAC,eAAD,8EADJ,CATJ,CADJ,CAeP,CAhBM","sourcesContent":["import React from 'react'\nimport { PinDropOutlined } from '@material-ui/icons';\nimport { GoogleMap } from \"react-google-maps\"\n\ninterface LocationCardProps {\n    name: string;\n    address: string;\n    telephone: string | number;\n    distance: number;\n    mapRef: React.RefObject<GoogleMap>;\n    lat: number;\n    lon: number;\n    setActivePlace: React.Dispatch<React.SetStateAction<string | null | undefined>>;\n}\n\nconst goToLocation = ({mapRef, lat, lon} : {mapRef: React.RefObject<GoogleMap>, lat: number, lon: number}) => {\n    if ( mapRef && mapRef.current) {\n        mapRef.current.panTo({ lat: parseFloat(String(lat)), lng: parseFloat(String(lon))});\n    }\n}\n\nexport const LocationCard: React.FC<LocationCardProps> = ({ lat, lon, name, address, telephone, distance, mapRef, setActivePlace }) => {\n        return (\n            <button className=\"map-search-location\" onClick={() => { \n                goToLocation({mapRef, lat, lon});\n                setActivePlace(name);\n            }}>\n                <div className=\"map-search-location-info\">\n                    <p className=\"map-search-location-info-title\">{name}, {(Math.round((distance + Number.EPSILON) * 100) / 100).toString()} miles</p>\n                    <p>{address}</p>\n                    <p>Phone: <a href=\"tel:{telephone}\">{telephone}</a></p>\n                </div>\n                <div className=\"map-search-location-icons\">\n                    <PinDropOutlined />\n                </div>\n            </button>\n        );\n}"]},"metadata":{},"sourceType":"module"}